{"version":3,"sources":["usr/layout/Stack.comp.tsx","usr/a_lib/utils/pickWithValues.ts","usr/data-display/Typography.comp.tsx","usr/a_lib/utils/colorMap.ts","usr/a_lib/utils/elevationMap.ts","usr/layout/Box.comp.tsx","usr/inputs/TextField.comp.tsx","usr/a_lib/components/InputCircularProgress.tsx","usr/inputs/SelectWithOptions.comp.tsx","usr/a_lib/components/ButtonCircularProgress.tsx","usr/inputs/Button.comp.tsx","CourseList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Stack","props","classByDirection","classes","gridWithRow","gridWithColumn","this","theme","direction","spacing","justifyContent","justifyItems","cells","contentList","length","i","push","key","style","gridGap","parseInt","className","React","Component","defaultProps","withStyles","width","display","gridAutoFlow","gridTemplateColumns","gridTemplateRows","withTheme","isNotNil","value","isNil","object","pickBy","Typography","align","color","gutterBottom","noWrap","paragraph","variant","letterSpacing","text","muiTypographyProps","pickWithValues","spanStyle","hueMap","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","colorHue","colorShade","foundColor","isString","get","Box","properties","borders","flexbox","palette","positions","sizing","boxShadow","typography","children","borderColor","findColor","backgroundColor","bgcolor","forOwn","spacingGroup","validSpacing","isEmpty","prop","isNaN","parseFloat","elevationMap","TextField","debouncedChange","setUpOnChange","debounceDelay","debounce","onChange","handleChange","e","setState","localInputText","currentTarget","state","prevProps","prevState","disabled","error","helperText","required","label","inputControl","formControl","multilineControl","mainProps","inputProps","fullWidth","margin","placeholder","startAdornment","endAdornment","InputAdornment","position","InputProps","type","useStyles","makeStyles","button","progress","primary","main","top","left","zIndex","progressCircleSizesMap","InputCircularProgress","progressSize","size","progressStyle","marginTop","marginLeft","CircularProgress","SelectWithOptions","labelId","inputLabel","stopPropagation","preventDefault","selectedValueLocal","target","uniqueId","createRef","selectedValue","labelWidthLocal","current","offsetWidth","controlLabel","loading","options","native","autoWidth","displayEmpty","hiddenLabel","disableGuttersInOptions","denseOptions","muiFormControlProps","muiSelectProps","optionsElements","optionItem","id","MenuItem","disableGutters","dense","FormControl","InputLabel","ref","NativeSelect","Select","labelWidth","FormHelperText","ButtonCircularProgress","Button","endIcon","startIcon","href","menu","useState","anchorEl","setAnchorEl","handleMenuItemClick","onMenuItemClick","menuItems","selected","onClick","muiButtonProps","buttonElement","Fragment","Menu","keepMounted","open","Boolean","onClose","CourseList","visibility","height","overflow","alignItems","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c2465bfd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StackProps, StackTypes } from './Stack.props';\n\nconst styles: any = () => ({\n    gridWithRow: {\n        width: '100%',\n        display: 'grid',\n        gridAutoFlow: 'column',\n    },\n    gridWithColumn: {\n        width: '100%',\n        display: 'grid',\n        gridTemplateColumns: '1fr',\n        gridTemplateRows: 'repeat(auto-fill, minmax(10px, 1fr) )',\n    },\n});\n\n/**\n * A simple CSS grid wrapper that can be used to arrange the sections in two directions\n * * horizontal layout - `row`\n * * vertical direction - `column`\n */\nclass Stack extends React.Component<StackProps, any> {\n\n    static propTypes: PropTypes.InferProps<StackProps>;\n    static defaultProps: PropTypes.InferProps<StackProps>;\n    classByDirection: any;\n\n    constructor(props: StackProps) {\n        super(props);\n        const { classes } = this.props;\n        this.classByDirection = {\n            'row': classes.gridWithRow,\n            'column': classes.gridWithColumn\n        };\n    }\n\n    render(): JSX.Element {\n        const { theme, direction, spacing, justifyContent, justifyItems, cells } = this.props;\n        const contentList: JSX.Element[] = [];\n        if (cells && cells.length > 0) {\n            for (let i = 0; i < cells.length; i++) {\n                contentList.push(\n                    <div\n                        key={`cell${i}`}\n                    >\n                        {cells[i]}\n                    </div>\n                );\n            }\n        }\n        let style: any = { gridGap: theme!.spacing(parseInt(spacing as string)) };\n        if (justifyContent) {\n            style.justifyContent = justifyContent;\n        }\n        if (justifyItems) {\n            style.justifyItems = justifyItems;\n        }\n        return (\n            <div\n                className={this.classByDirection[direction!]}\n                style={style}\n            >\n                {contentList}\n            </div>\n        );\n    }\n}\n\nStack.propTypes = StackTypes;\n\nStack.defaultProps = {\n    spacing: '1',\n    direction: 'column',\n    cells: [\n        <span/>,\n        <span/>,\n        <span/>\n    ]\n};\n\nexport default withStyles(styles, { withTheme: true })(Stack);\n","import isNil from 'lodash/isNil';\nimport pickBy from 'lodash/pickBy';\n\nfunction isNotNil (value: any): boolean {\n  return !isNil(value);\n}\n\nexport default function(object: any): any {\n  return pickBy(object, isNotNil);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TypographyMUI from '@material-ui/core/Typography';\nimport pickWithValues from 'usr/a_lib/utils/pickWithValues';\nimport { TypographyProps, TypographyTypes } from './Typography.props';\n\n/**\n * Use typography to present your design and content as clearly and efficiently as possible.\n *\n * Too many type sizes and styles at once can spoil any layout.\n * A typographic scale has a limited set of type sizes that work well together along with the layout grid.\n */\nclass Typography extends React.Component<TypographyProps, any> {\n\n    static propTypes: PropTypes.InferProps<TypographyProps>;\n    static defaultProps: PropTypes.InferProps<TypographyProps>;\n\n    render(): JSX.Element {\n        const {\n            align,\n            color,\n            display,\n            gutterBottom,\n            noWrap,\n            paragraph,\n            variant,\n            letterSpacing,\n            text\n        } = this.props;\n        const muiTypographyProps =\n            pickWithValues({ align, color, display, gutterBottom, noWrap, paragraph, variant, text });\n        let spanStyle: any = {};\n        if (letterSpacing) {\n            spanStyle.letterSpacing = letterSpacing;\n        }\n        return (\n            <TypographyMUI\n                {...muiTypographyProps}\n            >\n                <span style={spanStyle}>{text}</span>\n            </TypographyMUI>\n        );\n    }\n}\n\nTypography.propTypes = TypographyTypes;\n\nTypography.defaultProps = {\n    align: 'inherit',\n    color: 'initial',\n    display: 'initial',\n    gutterBottom: false,\n    noWrap: false,\n    paragraph: false,\n    variant: 'body1',\n    text: 'Text here'\n};\n\nexport default Typography;\n","import get from 'lodash/get';\nimport isString from 'lodash/isString';\nimport { Theme } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst hueMap: {[id: string]: any} = {\n  'white': '#ffffff',\n  'black': '#000000',\n  'red': red,\n  'pink': pink,\n  'purple': purple,\n  'deepPurple': deepPurple,\n  'indigo': indigo,\n  'blue': blue,\n  'lightBlue': lightBlue,\n  'cyan': cyan,\n  'teal': teal,\n  'green': green,\n  'lightGreen': lightGreen,\n  'lime': lime,\n  'yellow': yellow,\n  'amber': amber,\n  'orange': orange,\n  'deepOrange': deepOrange,\n  'brown': brown,\n  'grey': grey,\n  'blueGrey': blueGrey\n};\n\nexport default function (colorHue: string, colorShade: string, theme?: Theme) {\n  let foundColor: any = null;\n  if (colorHue) {\n    foundColor = hueMap[colorHue];\n    if (!foundColor) {\n      if (theme) {\n        foundColor = get(theme, `palette.${colorHue}`);\n      }\n    } else if (!isString(foundColor)) {\n      if (colorShade) {\n        foundColor = foundColor[colorShade];\n      } else {\n        foundColor = foundColor[500];\n      }\n    }\n  }\n  return foundColor;\n}\n","export default {\n  '0': 0,\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  '10': 10,\n  '11': 11,\n  '12': 12,\n  '13': 13,\n  '14': 14,\n  '15': 15,\n  '16': 16,\n  '17': 17,\n  '18': 18,\n  '19': 19,\n  '20': 20,\n  '21': 21,\n  '22': 22,\n  '23': 23,\n  '24': 24,\n} as {[id: string]: number};\n","import forOwn from 'lodash/forOwn';\nimport isEmpty from 'lodash/isEmpty';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxMUI from '@material-ui/core/Box';\nimport { withTheme } from '@material-ui/core/styles';\nimport pickWithValues from '../a_lib/utils/pickWithValues';\nimport findColor from '../a_lib/utils/colorMap';\nimport elevationMap from '../a_lib/utils/elevationMap';\nimport { BoxProps, BoxTypes } from './Box.props';\n\n/**\n * The Box component serves as a wrapper component for most of the CSS utility needs.\n */\nclass Box extends React.Component<BoxProps, any> {\n\n    static propTypes: PropTypes.InferProps<BoxProps>;\n    static defaultProps: PropTypes.InferProps<BoxProps>;\n\n    render() {\n        let properties: any = {};\n        const {\n            borders,\n            display,\n            flexbox,\n            palette,\n            positions,\n            sizing,\n            spacing,\n            boxShadow,\n            typography,\n            children,\n            theme\n        } = this.props;\n        if (borders) {\n            properties = borders;\n            if (borders.borderColor) {\n                const { colorHue, colorShade } = borders.borderColor;\n                properties.borderColor = findColor(colorHue, colorShade, theme);\n            }\n        }\n        if (display) {\n            properties = {\n                ...properties,\n                ...pickWithValues(display)\n            };\n        }\n        if (palette) {\n            const { color, backgroundColor } = palette;\n            if (color) {\n                const { colorHue, colorShade } = color;\n                properties.color = findColor(colorHue, colorShade, theme);\n            }\n            if (backgroundColor) {\n                const { colorHue, colorShade } = backgroundColor;\n                properties.bgcolor = findColor(colorHue, colorShade, theme);\n            }\n        }\n        if (sizing) {\n            properties = {\n                ...properties,\n                ...pickWithValues(sizing)\n            };\n        }\n        if (flexbox) {\n            properties = {\n                ...properties,\n                ...flexbox\n            };\n        }\n        if (positions) {\n            properties = {\n                ...properties,\n                ...positions\n            };\n        }\n        if (spacing) {\n            forOwn(spacing, (spacingGroup) => {\n                const validSpacing = pickWithValues(spacingGroup);\n                if (!isEmpty(validSpacing)) {\n                    forOwn(validSpacing, (value, prop) => {\n                        if (!isNaN(value)) {\n                            properties[prop] = parseFloat(value);\n                        } else {\n                            properties[prop] = value;\n                        }\n                    });\n                }\n            });\n        }\n        if (boxShadow) {\n            properties.boxShadow = elevationMap[boxShadow];\n        }\n        if (typography) {\n            properties = {\n                ...properties,\n                ...typography\n            };\n        }\n        // get rid of nulls and undefined\n        properties = pickWithValues(properties);\n        //\n        return (\n            <BoxMUI {...properties}>\n                {children}\n            </BoxMUI>\n        );\n    }\n}\n\nBox.propTypes = BoxTypes;\n\nBox.defaultProps = {\n    display: {\n        display: 'flex',\n    },\n    sizing: {\n        width: '100%'\n    },\n    children: [<span/>],\n};\n\nexport default withTheme(Box);\n","import debounce from 'lodash/debounce';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextFieldMUI from '@material-ui/core/TextField';\nimport InputAdornmentMUI from '@material-ui/core/InputAdornment';\nimport pickWithValues from '../a_lib/utils/pickWithValues';\nimport { TextFieldProps, TextFieldTypes } from './TextField.props';\n\ninterface TextFieldState {\n    localInputText?: string;\n}\n\n/**\n * Text fields allow users to enter text into a UI. They typically appear in forms and dialogs.\n */\nclass TextField extends React.Component<TextFieldProps, TextFieldState> {\n\n    static propTypes: PropTypes.InferProps<TextFieldProps>;\n    static defaultProps: PropTypes.InferProps<TextFieldProps>;\n\n    debouncedChange?: any;\n\n    constructor(props: TextFieldProps) {\n        super(props);\n        const { value, debounceDelay } = this.props;\n        this.state = {\n            localInputText: value,\n        };\n        this.setUpOnChange(debounceDelay);\n    }\n\n    componentDidUpdate(prevProps: TextFieldProps, prevState: TextFieldState) {\n        const { value, debounceDelay } = this.props;\n        const { localInputText } = this.state;\n        if (value !== prevProps.value && localInputText !== value) {\n            this.setState({\n                localInputText: value\n            });\n        }\n        if (debounceDelay !== prevProps.debounceDelay) {\n            this.setUpOnChange(debounceDelay);\n        }\n    }\n\n    setUpOnChange = (debounceDelay?: number): void => {\n        if (typeof debounceDelay !== 'undefined' && debounceDelay > 0) {\n            this.debouncedChange = debounce((value: string) => {\n                if (this.props.onChange) {\n                    this.props.onChange(value);\n                }\n            }, debounceDelay);\n        } else {\n            this.debouncedChange = (value: string) => {\n                if (this.props.onChange) {\n                    this.props.onChange(value);\n                }\n            };\n        }\n    };\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({\n            localInputText: e.currentTarget.value\n        });\n        this.debouncedChange(e.currentTarget.value);\n    };\n\n    render(): JSX.Element {\n        const { localInputText } = this.state;\n        const { disabled, error, helperText, required, label, inputControl, formControl, multilineControl } = this.props;\n        let mainProps: any = pickWithValues({ disabled, error, required, label, helperText });\n        let inputProps: any = {};\n        if (inputControl) {\n            mainProps = { ...mainProps, ...pickWithValues(inputControl) };\n        }\n        if (formControl) {\n            const { color, fullWidth, margin, placeholder, variant, startAdornment, endAdornment } = formControl;\n            mainProps = { ...mainProps, ...pickWithValues({ color, fullWidth, margin, placeholder, variant }) };\n            if (startAdornment) {\n                inputProps.startAdornment = (\n                    <InputAdornmentMUI position=\"start\">{startAdornment}</InputAdornmentMUI>\n                );\n            }\n            if (endAdornment) {\n                inputProps.endAdornment = (\n                    <InputAdornmentMUI position=\"end\">{endAdornment}</InputAdornmentMUI>\n                );\n            }\n        }\n        if (multilineControl) {\n            mainProps = { ...mainProps, ...pickWithValues(multilineControl) };\n        }\n        return (\n            <TextFieldMUI\n                value={localInputText || ''}\n                InputProps={inputProps}\n                {...mainProps}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nTextField.propTypes = TextFieldTypes;\n\nTextField.defaultProps = {\n    debounceDelay: 300,\n    inputControl: {\n        type: 'text',\n    },\n    formControl: {\n        margin: 'none',\n    }\n};\n\nexport default TextField;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles: any = makeStyles(theme => ({\n  button: {\n    position: 'relative',\n  },\n  progress: {\n    color: theme.palette.primary.main,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    zIndex: 1,\n  }\n}));\n\nconst progressCircleSizesMap: {[id: string]: number} = {\n  'small': 16,\n  'medium': 20,\n  'large': 24,\n};\n\nexport interface InputCircularProgressProps {\n  size?: string;\n}\n\nconst InputCircularProgress = (props: InputCircularProgressProps) => {\n  const classes: any = useStyles();\n  const progressSize: number = progressCircleSizesMap[props.size || 'medium'];\n  const progressStyle: any = {\n    marginTop: -(progressSize / 2),\n    marginLeft: -(progressSize / 2),\n  };\n  return (\n    <CircularProgress\n      size={progressSize}\n      style={progressStyle}\n      className={classes.progress}\n    />\n  );\n};\n\nexport default InputCircularProgress;","import uniqueId from 'lodash/uniqueId';\nimport React, { RefObject } from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport SelectMUI from '@material-ui/core/Select';\nimport NativeSelectMUI from '@material-ui/core/NativeSelect';\nimport pickWithValues from '../a_lib/utils/pickWithValues';\nimport InputCircularProgress from '../a_lib/components/InputCircularProgress';\nimport { SelectWithOptionsProps, SelectWithOptionsTypes } from './SelectWithOptions.props';\n\ninterface SelectWithOptionsState {\n    selectedValueLocal?: string;\n    labelWidthLocal?: number;\n}\n\n/**\n * Select components are used for collecting user provided information from a list of options.\n */\nclass SelectWithOptions extends React.Component<SelectWithOptionsProps, SelectWithOptionsState> {\n\n    static propTypes: PropTypes.InferProps<SelectWithOptionsProps>;\n    static defaultProps: PropTypes.InferProps<SelectWithOptionsProps>;\n\n    labelId: string;\n    inputLabel: RefObject<HTMLLabelElement>;\n\n    constructor(props: SelectWithOptionsProps) {\n        super(props);\n        this.labelId = uniqueId('selectWithOptions');\n        this.inputLabel = React.createRef<HTMLLabelElement>();\n        this.state = {\n            selectedValueLocal: this.props.selectedValue,\n            labelWidthLocal: 0\n        };\n    }\n\n    componentDidMount() {\n        const { formControl } = this.props;\n        if (formControl!.variant === 'outlined' && this.inputLabel) {\n            this.setState({\n                labelWidthLocal: this.inputLabel.current!.offsetWidth,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps: SelectWithOptionsProps, prevState: SelectWithOptionsState) {\n        const { selectedValue, label, formControl } = this.props;\n        const { selectedValueLocal } = this.state;\n        if (selectedValue !== prevProps.selectedValue && selectedValue !== selectedValueLocal) {\n            this.setState({ selectedValueLocal: selectedValue });\n        }\n        if (label !== prevProps.label && formControl!.variant === 'outlined' && this.inputLabel) {\n            this.setState({\n                labelWidthLocal: this.inputLabel.current!.offsetWidth,\n            });\n        }\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        this.setState({\n            selectedValueLocal: e.target.value,\n        });\n        if (this.props.onChange) {\n            this.props.onChange(e.currentTarget.value);\n        }\n    };\n\n    render(): JSX.Element {\n        const {\n            label: controlLabel,\n            error,\n            required,\n            disabled,\n            loading,\n            formControl,\n            options\n        } = this.props;\n        const {\n            native,\n            autoWidth,\n            displayEmpty,\n            variant,\n            helperText,\n            color,\n            fullWidth,\n            hiddenLabel,\n            disableGuttersInOptions,\n            denseOptions,\n            margin,\n            size,\n        } = formControl!;\n        const { selectedValueLocal, labelWidthLocal } = this.state;\n        const muiFormControlProps: any = pickWithValues({ disabled, error, fullWidth, hiddenLabel, required });\n        const muiSelectProps: any = pickWithValues({ autoWidth, displayEmpty });\n        const optionsElements: JSX.Element[] = [];\n        if (options && options.length > 0) {\n            let optionItem: any;\n            for (let i = 0; i < options.length; i++) {\n                optionItem = options[i];\n                if (optionItem) {\n                    const { id, value, label, disabled } = optionItem;\n                    if (native) {\n                        optionsElements.push(\n                            <option\n                                key={id ? id : `menuItem${i}`}\n                                value={value}\n                                disabled={!!disabled}\n                            >\n                                {label}\n                            </option>\n                        )\n                    } else {\n                        optionsElements.push(\n                            <MenuItem\n                                key={id ? id : `menuItem${i}`}\n                                value={value}\n                                disabled={!!disabled}\n                                disableGutters={!!disableGuttersInOptions}\n                                dense={!!denseOptions}\n                            >\n                                {label}\n                            </MenuItem>\n                        );\n                    }\n                }\n            }\n        }\n        if (loading) {\n            muiFormControlProps.disabled = true;\n        }\n        return (\n            <FormControl\n                variant={variant}\n                color={color}\n                margin={margin}\n                size={size}\n                {...muiFormControlProps}\n            >\n                {controlLabel && (<InputLabel id={this.labelId} ref={this.inputLabel}>{controlLabel}</InputLabel>)}\n                {native\n                    ? (\n                        <NativeSelectMUI\n                            value={selectedValueLocal || ''}\n                            inputProps={{\n                                id: this.labelId,\n                            }}\n                            onChange={this.handleChange}\n                        >\n                            {optionsElements}\n                        </NativeSelectMUI>\n                    )\n                    : (\n                        <SelectMUI\n                            labelId={this.labelId}\n                            value={selectedValueLocal || ''}\n                            labelWidth={labelWidthLocal}\n                            {...muiSelectProps}\n                            onChange={this.handleChange}\n                        >\n                            {optionsElements}\n                        </SelectMUI>\n                    )\n                }\n                {helperText && (<FormHelperText>{helperText}</FormHelperText>)}\n                {loading && (\n                    <InputCircularProgress size={size}/>\n                )}\n            </FormControl>\n        );\n    }\n}\n\nSelectWithOptions.propTypes = SelectWithOptionsTypes;\n\nSelectWithOptions.defaultProps = {\n    formControl: {\n        color: 'primary',\n        fullWidth: true,\n        margin: 'none',\n        variant: 'standard',\n    },\n    options: [\n        { id: '0000', value: '', label: 'None' },\n        { id: '0001', value: 'orange', label: 'Orange' },\n        { id: '0002', value: 'blue', label: 'Blue' },\n        { id: '0003', value: 'green', label: 'Green' }\n    ]\n};\n\nexport default SelectWithOptions;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles: any = makeStyles(theme => ({\n  button: {\n    position: 'relative',\n  },\n  progress: {\n    color: theme.palette.primary.main,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    zIndex: 1,\n  }\n}));\n\nconst progressCircleSizesMap: {[id: string]: number} = {\n  'small': 16,\n  'medium': 20,\n  'large': 24,\n};\n\nexport interface ButtonCircularProgressProps {\n  size?: string;\n}\n\nconst ButtonCircularProgress = (props: ButtonCircularProgressProps) => {\n  const classes: any = useStyles();\n  const progressSize: number = progressCircleSizesMap[props.size || 'medium'];\n  const progressStyle: any = {\n    marginTop: -(progressSize / 2),\n    marginLeft: -(progressSize / 2),\n  };\n  return (\n    <CircularProgress\n      size={progressSize}\n      style={progressStyle}\n      className={classes.progress}\n    />\n  );\n};\n\nexport default ButtonCircularProgress;","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ButtonMUI from '@material-ui/core/Button';\nimport MenuItemMUI from '@material-ui/core/MenuItem';\nimport MenuMUI from '@material-ui/core/Menu';\nimport pickWithValues from '../a_lib/utils/pickWithValues';\nimport ButtonCircularProgress from '../a_lib/components/ButtonCircularProgress';\nimport { ButtonProps, ButtonTypes } from './Button.props';\n\nconst useStyles: any = makeStyles(() => ({\n    button: {\n        position: 'relative',\n    },\n}));\n\n/**\n * Buttons allow users to take actions, and make choices, with a single tap.\n *\n * This button component lets you add a menu popup.\n */\nconst Button = (props: ButtonProps): JSX.Element => {\n    const {\n        label,\n        color,\n        variant,\n        disabled,\n        endIcon,\n        startIcon,\n        size,\n        fullWidth,\n        href,\n        loading,\n        menu,\n    } = props;\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n    const handleButtonClick = (e: React.MouseEvent<HTMLElement>) => {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const handleOpenMenu = (e: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleMenuItemClick = (id?: string, href?: string) => (e: React.MouseEvent<HTMLElement>) => {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        setAnchorEl(null);\n        if (props.onMenuItemClick) {\n            props.onMenuItemClick({ id, href });\n        }\n    };\n\n    const handleCloseMenu = () => {\n        setAnchorEl(null);\n    };\n\n    let menuItems: JSX.Element[] = [];\n    if (menu && menu.length > 0) {\n        for (let i = 0; i < menu.length; i++) {\n            if (menu[i]) {\n                const { disabled, selected, id, href } = menu[i];\n                menuItems.push(\n                    <MenuItemMUI\n                        key={`menuItem${i}`}\n                        disabled={disabled}\n                        selected={selected}\n                        onClick={handleMenuItemClick(id, href)}\n                    >\n                        {menu[i].label}\n                    </MenuItemMUI>\n                );\n            }\n        }\n    }\n    const muiButtonProps: any = pickWithValues({ variant, color, disabled, size, fullWidth, href });\n    if (startIcon) {\n        muiButtonProps.startIcon = startIcon;\n    }\n    if (endIcon) {\n        muiButtonProps.endIcon = endIcon;\n    }\n    if (loading) {\n        muiButtonProps.disabled = true;\n    }\n    const buttonElement: JSX.Element = (\n        <ButtonMUI\n            className={classes.button}\n            {...muiButtonProps}\n            onClick={menuItems.length > 0 ? handleOpenMenu : handleButtonClick}\n        >\n            {label}\n            {loading && (\n                <ButtonCircularProgress size={size}/>\n            )}\n        </ButtonMUI>\n    );\n    if (menuItems.length > 0) {\n        return (\n            <React.Fragment>\n                {buttonElement}\n                <MenuMUI\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleCloseMenu}\n                >\n                    {menuItems}\n                </MenuMUI>\n            </React.Fragment>\n        );\n    } else {\n        return buttonElement;\n    }\n};\n\nButton.propTypes = ButtonTypes;\n\nButton.defaultProps = {\n    label: 'Button',\n    variant: 'contained',\n};\n\nexport default Button;\n","import React from \"react\";\nimport Stack from \"usr/layout/Stack.comp\";\nimport Typography from \"usr/data-display/Typography.comp\";\nimport Box from \"usr/layout/Box.comp\";\nimport TextField from \"usr/inputs/TextField.comp\";\nimport SelectWithOptions from \"usr/inputs/SelectWithOptions.comp\";\nimport Button from \"usr/inputs/Button.comp\";\nimport ListNavigation from \"usr/data-display/ListNavigation.comp\";\nimport axios from 'axios';\n\nexport interface CourseListProps {}\n\nfunction CourseList(props: CourseListProps): JSX.Element {\n    return (\n        <Stack\n            cells={[\n                <Typography\n                    key=\"item1\"\n                    align=\"center\"\n                    color=\"primary\"\n                    display=\"initial\"\n                    gutterBottom={false}\n                    noWrap={false}\n                    paragraph={false}\n                    text=\"欢迎使用大学公共课程资源共享管理平台\"\n                    variant=\"h4\"\n                />,\n                <Box\n                    key=\"item2\"\n                    children={[\n                        <Box\n                            key=\"item3\"\n                            boxShadow=\"0\"\n                            children={[\n                                <TextField\n                                    key=\"item4\"\n                                    debounceDelay={0}\n                                    disabled={false}\n                                    error={false}\n                                    formControl={{\n                                        fullWidth: true,\n                                        margin: \"dense\",\n                                        variant: \"outlined\"\n                                    }}\n                                    helperText=\"输入查询课程名\"\n                                    inputControl={{ type: \"text\" }}\n                                    required={false}\n                                />\n                            ]}\n                            display={{ visibility: \"visible\" }}\n                            sizing={{ height: \"20\", width: \"100%\" }}\n                        />,\n                        <Box\n                            key=\"item5\"\n                            boxShadow=\"0\"\n                            children={[\n                                <TextField\n                                    key=\"item6\"\n                                    debounceDelay={0}\n                                    disabled={false}\n                                    error={false}\n                                    formControl={{\n                                        fullWidth: true,\n                                        margin: \"dense\",\n                                        variant: \"outlined\"\n                                    }}\n                                    helperText=\"输入查询教师名\"\n                                    inputControl={{ type: \"text\" }}\n                                    required={false}\n                                />\n                            ]}\n                            display={{ display: \"flex\" }}\n                            sizing={{ height: \"50%\", width: \"100%\" }}\n                        />,\n                        <SelectWithOptions\n                            key=\"item7\"\n                            formControl={{\n                                fullWidth: true,\n                                margin: \"dense\",\n                                variant: \"standard\"\n                            }}\n                            label=\"选择课程类型\"\n                            options={[\n                                { id: \"0000\", label: \"None\" },\n                                {\n                                    id: \"0001\",\n                                    label: \"公共基础必修\",\n                                    value: \"publicBasicCompulsory\"\n                                },\n                                {\n                                    id: \"0002\",\n                                    label: \"公共基础选修\",\n                                    value: \"publicBasicElective\"\n                                },\n                                {\n                                    id: \"0003\",\n                                    label: \"通识教育必修\",\n                                    value: \"generalEducationCompulsory\"\n                                },\n                                {\n                                    id: \"0004\",\n                                    label: \"通识教育选修\",\n                                    value: \"generalEducationElective\"\n                                },\n                                {\n                                    id: \"0005\",\n                                    label: \"专业教育必修\",\n                                    value: \"professionalEducationCompulsory\"\n                                },\n                                {\n                                    id: \"0006\",\n                                    label: \"专业教育选修\",\n                                    value: \"professionalEducationElective\"\n                                },\n                                {\n                                    id: \"0007\",\n                                    label: \"公共必修\",\n                                    value: \"publicCompulsory\"\n                                },\n                                {\n                                    id: \"0008\",\n                                    label: \"公共选修\",\n                                    value: \"publicElective\"\n                                },\n                                {\n                                    id: \"0009\",\n                                    label: \"专业必修\",\n                                    value: \"professionalCompulsory\"\n                                },\n                                {\n                                    id: \"0010\",\n                                    label: \"专业选修\",\n                                    value: \"professionalElective\"\n                                }\n                            ]}\n                        />,\n                        <Button\n                            key=\"item8\"\n                            fullWidth={false}\n                            label=\"Button\"\n                            variant=\"contained\"\n                        />\n                    ]}\n                    display={{ display: \"flex\", overflow: \"visible\" }}\n                    flexbox={{ alignItems: \"center\" }}\n                    sizing={{ width: \"500px\" }}\n                />,\n                <Typography\n                    key=\"item9\"\n                    align=\"inherit\"\n                    color=\"initial\"\n                    display=\"initial\"\n                    gutterBottom={false}\n                    noWrap={false}\n                    paragraph={false}\n                    text=\"课程号  课程名  课程类别  授课教师  授课学院  课程学分  学时安排\"\n                    variant=\"body1\"\n                />,\n\t\t\t\t/*\n                <ListNavigation\n                    key=\"item10\"\n                    dense={true}\n                    items={[\n                        {\n                            divider: true,\n                            primaryText: \"List Item 00001\",\n                            secondaryText: \"Subtext 00001\",\n                            url: \"/page1\"\n                        }\n                    ]}\n                    itemsTextVariant=\"body1\"\n                />\n\t\t\t\t*/\n            ]}\n            direction=\"column\"\n            justifyItems=\"center\"\n            spacing=\"0\"\n        />\n    );\n}\n\nexport default CourseList;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CourseList from './CourseList';\n\nfunction App() {\n  return (\n    < CourseList />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}